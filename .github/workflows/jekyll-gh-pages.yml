name: 自动生成并部署 Jekyll 到 GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false



  
jobs:
  # 预部署任务
  work:
    runs-on: ubuntu-latest

    steps:
      - name: 检出仓库
        uses: actions/checkout@v4

      - name: 设置 Python 环境
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'


      - name: 安装 Python 依赖
        run: |
          python -m pip install --upgrade pip
          pip install -r ./刷题模块/脚本集/requirements.txt

      - name: 运行自定义 Python 脚本
        run: |
          cd ./刷题模块/
          python 脚本集/Scripts/DataVisualization/src/main.py

      - name: 提交生成的文件
        run: |
          echo "提交生成的文件到 Git 仓库..."
          git add .
          git commit -m "自动提交生成的文件"
          git push origin main  # 提交到 main 分支

  # 构建与部署任务
  build:
    runs-on: ubuntu-latest
    needs: work  # 确保 work 完成后执行

    steps:
      - name: 检出仓库
        uses: actions/checkout@v4

      - name: 清理旧的页面缓存
        run: |
          echo "清理旧的页面缓存..."
          rm -rf _site  # 删除 _site 目录，清理缓存

      - name: 设置 Pages
        uses: actions/configure-pages@v5

      - name: 使用 Jekyll 构建网站
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./  # 确保源目录是正确的
          destination: ./_site  # 确保构建目录是 _site

      - name: 列出 _site 目录中的内容
        run: |
          echo "列出 _site 目录中的内容："
          ls -R ./_site  # 列出 _site 目录中的内容，确保其生成

      - name: 上传构建产物
        uses: actions/upload-pages-artifact@v3

      - name: 配置 GitHub 用户信息
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: 创建新的 gh-pages 分支
        run: |
          git checkout -B gh-pages
          git reset --hard
          git init

      - name: 将生成的静态内容复制到根目录
        run: |
          echo "检查 _site 目录是否存在..."
          if [ -d "./_site" ]; then
            echo "_site 目录已存在，开始复制文件..."
            rsync -av --exclude='.git' ./_site/ ./  # 将 _site 目录内容递归复制到根目录
          else
            echo "_site 目录未生成，请检查构建步骤。"  # 如果没有 _site 目录，输出错误信息
            exit 1
          fi

      - name: 使用 Personal Access Token 推送
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.MY_GITHUB_TOKEN }}@github.com/AliceAuto/AliceAuto.github.io.git
          git push --force --set-upstream origin gh-pages
